{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Question 1 : \
\pard\pardeftab720\sl360\slmult1\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
Javascript engine executes one task at a time (synchronous tasks). Event loop is a program in the browser that helps to handle asynchronous tasks. Basically, when an asynchronous function like setTimeout or promise is called/created, the web API add it to a Queue.  When the call stack in the V8 is empty, event loop move a task from the queue to stack. \
There are two kind of queue called-micro task queue and macro-task queue. The microtask queue has the priority on the second one. Event loop ensures that the microtask queue is empty before dealing with the macro task queue. Time event Dom events are pushed in the macro task queue while the promises are enqueued in the microtask queue as they are considered as more important.\
\
Question2 : \
\
The simplest way to make a function asynchronous is to use setTimeout. \
Another way is to call it in the resolve callback of the promise or in then. \
 }
